import 'dart:typed_data';
import 'package:isar/isar.dart';
import 'package:uuid/uuid.dart';

part 'clipboard_item.g.dart'; // Will be generated by build_runner

enum ClipboardItemType { text, image }

@collection
class ClipboardItem {
  Id isarId = Isar.autoIncrement; // Auto incrementing ID for Isar

  @Index(unique: true, replace: true)
  late String id; // Unique ID for reference

  @Index()
  late DateTime timestamp;

  @Enumerated(EnumType.ordinal)
  @Index()
  late ClipboardItemType type;

  String? textData; // Null if it's an image
  List<int>? imageData; // Null if it's text (use List<int> for Isar compatibility)

  String? preview; // Short text preview or placeholder for image
  String? sourceApp; // Optional: Hard to get reliably across platforms
  String? title; // User-editable title

  // Non-persisted fields (example)
  @ignore
  bool get isText => type == ClipboardItemType.text;
  @ignore
  bool get isImage => type == ClipboardItemType.image;

  ClipboardItem() {
    // Generate a unique ID if not provided (e.g., when creating a new item)
    id = const Uuid().v4();
    timestamp = DateTime.now();
  }

  // Factory constructor for text
  factory ClipboardItem.text(String text, {String? sourceApp}) {
    // Basic preview generation
    String truncatedText = text.trim().replaceAll('\n', ' ');
    if (truncatedText.length > 100) {
      truncatedText = '${truncatedText.substring(0, 97)}...';
    }

    return ClipboardItem()
      ..type = ClipboardItemType.text
      ..textData = text
      ..preview = truncatedText
      ..sourceApp = sourceApp;
  }

   // Factory constructor for image
  factory ClipboardItem.image(Uint8List imageBytes, {String? sourceApp}) {
    return ClipboardItem()
      ..type = ClipboardItemType.image
      ..imageData = imageBytes.toList() // Convert to List<int> for Isar
      ..preview = '[Image]' // Simple placeholder
      ..sourceApp = sourceApp;
  }

   // Method to get image data back as Uint8List
  Uint8List? getImageData() {
    if (imageData != null) {
      return Uint8List.fromList(imageData!);
    }
    return null;
  }
}